'use strict';

var path = require('path');
var swaggerJsdoc = require('swagger-jsdoc');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var swaggerJsdoc__default = /*#__PURE__*/_interopDefaultLegacy(swaggerJsdoc);

const defaultOptions = {
  apiFolder: "pages/api",
  schemaFolders: [],
  definition: {
    openapi: "3.0.0",
    info: {
      title: "Next Swagger Doc Demo Api",
      version: "1.0"
    }
  }
};
function createSwaggerSpec({
  apiFolder = "pages/api",
  schemaFolders = [],
  ...swaggerOptions
} = defaultOptions) {
  const scanFolders = [apiFolder, ...schemaFolders];
  const apis = scanFolders.flatMap((folder) => {
    const buildApiDirectory = path.join(process.cwd(), ".next/server", folder);
    const apiDirectory = path.join(process.cwd(), folder);
    const publicDirectory = path.join(process.cwd(), "public");
    const fileTypes = ["ts", "tsx", "jsx", "js", "json", "swagger.yaml"];
    return [
      ...fileTypes.map((fileType) => `${apiDirectory}/**/*.${fileType}`),
      ...["js", "swagger.yaml", "json"].map(
        (fileType) => `${buildApiDirectory}/**/*.${fileType}`
      ),
      ...["swagger.yaml", "json"].map(
        (fileType) => `${publicDirectory}/**/*.${fileType}`
      )
    ];
  });
  const options = {
    apis,
    ...swaggerOptions
  };
  const spec = swaggerJsdoc__default["default"](options);
  return spec;
}
function withSwagger({
  apiFolder = "pages/api",
  schemaFolders = [],
  ...swaggerOptions
} = defaultOptions) {
  return () => (_req, res) => {
    try {
      const swaggerSpec = createSwaggerSpec({
        apiFolder,
        schemaFolders,
        ...swaggerOptions
      });
      res.status(200).send(swaggerSpec);
    } catch (error) {
      res.status(400).send(error);
    }
  };
}

exports.createSwaggerSpec = createSwaggerSpec;
exports.withSwagger = withSwagger;
