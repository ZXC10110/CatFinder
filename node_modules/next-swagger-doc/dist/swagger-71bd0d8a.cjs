'use strict';

var path = require('path');
var swaggerJsdoc = require('swagger-jsdoc');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var swaggerJsdoc__default = /*#__PURE__*/_interopDefaultLegacy(swaggerJsdoc);

var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
const defaultOptions = {
  apiFolder: "pages/api",
  schemaFolders: [],
  definition: {
    openapi: "3.0.0",
    info: {
      title: "Next Swagger Doc Demo Api",
      version: "1.0"
    }
  }
};
function createSwaggerSpec(_a = defaultOptions) {
  var _b = _a, {
    apiFolder = "pages/api",
    schemaFolders = []
  } = _b, swaggerOptions = __objRest(_b, [
    "apiFolder",
    "schemaFolders"
  ]);
  const scanFolders = [apiFolder, ...schemaFolders];
  const apis = scanFolders.flatMap((folder) => {
    const buildApiDirectory = path.join(process.cwd(), ".next/server", folder);
    const apiDirectory = path.join(process.cwd(), folder);
    const publicDirectory = path.join(process.cwd(), "public");
    const fileTypes = ["ts", "tsx", "jsx", "js", "json", "swagger.yaml"];
    return [
      ...fileTypes.map((fileType) => `${apiDirectory}/**/*.${fileType}`),
      ...["js", "swagger.yaml", "json"].map((fileType) => `${buildApiDirectory}/**/*.${fileType}`),
      ...["swagger.yaml", "json"].map((fileType) => `${publicDirectory}/**/*.${fileType}`)
    ];
  });
  const options = __spreadValues({
    apis
  }, swaggerOptions);
  const spec = swaggerJsdoc__default["default"](options);
  return spec;
}
function withSwagger(_c = defaultOptions) {
  var _d = _c, {
    apiFolder = "pages/api",
    schemaFolders = []
  } = _d, swaggerOptions = __objRest(_d, [
    "apiFolder",
    "schemaFolders"
  ]);
  return () => (_req, res) => {
    try {
      const swaggerSpec = createSwaggerSpec(__spreadValues({
        apiFolder,
        schemaFolders
      }, swaggerOptions));
      res.status(200).send(swaggerSpec);
    } catch (error) {
      res.status(400).send(error);
    }
  };
}

exports.createSwaggerSpec = createSwaggerSpec;
exports.withSwagger = withSwagger;
